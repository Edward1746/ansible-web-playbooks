---
# File: docker-gen.yml
# Type: task
# Part: Docker

- name: DockerGen | Check directory
  file: state=directory path=/opt/downloads owner=root group=root mode=0775

- name: DockerGen | Fetch package
  get_url: url=https://github.com/jwilder/docker-gen/releases/download/{{ docker_gen_version }}/docker-gen-linux-amd64-{{ docker_gen_version }}.tar.gz
    dest=/opt/downloads/docker-gen-linux-amd64-{{ docker_gen_version }}.tar.gz
    sha256sum={{ docker_gen_sha256sum }}
  register: result
- name: DockerGen | Extract package
  shell: rm /opt/local/bin/docker-gen; mkdir -p /opt/local/bin; tar -xvzf /opt/downloads/docker-gen-linux-amd64-{{ docker_gen_version }}.tar.gz -C /opt/local/bin; chmod +rx /opt/local/bin/docker-gen
  when: result|changed
- name: DockerGen | Check link
  file: state=link path=/usr/bin/docker-gen src=/opt/local/bin/docker-gen

- name: DockerGen | Setup templates directory
  file: path=/etc/docker/templates state=directory

- name: DockerGen | Deploy hosts template
  shell: cp /etc/hosts /etc/docker/templates/hosts.orig
  creates: /etc/docker/templates/hosts.orig

- name: DockerGen | Deploy hosts template
  shell: "sed '/# The following lines are desirable for IPv6 capable hosts/i\# Docker hosts genenerated by docker-gen\n\{\{ range $key, $value := . \}\}\{\{ $addrLen := len $value.Addresses \}\}\{\{ if gt $addrLen 0 \}\}\{\{ with $address := index $value.Addresses 0 \}\}\{\{ $address.IP \}\}\t\{\{ $value.Name \}\}.docker {{ ansible_hostname }}.\{\{ $value.Name \}\}\{\{ end \}\}\{\{ end \}\}\n\{\{ end \}\}' /etc/docker/templates/hosts.orig > /etc/docker/templates/hosts.tmpl"
  notify: restart docker-gen

- name: DockerGen | Deploy service configuration
  template: src=init_docker-gen.conf.j2 dest=/etc/init/docker-gen.conf owner=root group=root mode=0755 backup=no
  notify: restart docker-gen
