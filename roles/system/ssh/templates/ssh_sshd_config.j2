# Package generated configuration file
# See the sshd_config(5) manpage for details

# What ports, IPs and protocols we listen for
Port {{ ssh_port | default(22) }}
# Use these options to restrict which interfaces/protocols sshd will bind to
#ListenAddress ::
#ListenAddress 0.0.0.0
Protocol {{ ssh_protocol | default(2) }}
# HostKeys for protocol version 2
HostKey /etc/ssh/ssh_host_rsa_key
#HostKey /etc/ssh/ssh_host_dsa_key
#HostKey /etc/ssh/ssh_host_ecdsa_key
{% if ansible_distribution == 'Ubuntu' and ansible_lsb.major_release == 14 %}
HostKey /etc/ssh/ssh_host_ed25519_key
{% endif %}
#Privilege Separation is turned on for security
UsePrivilegeSeparation yes

# Lifetime and size of ephemeral version 1 server key
KeyRegenerationInterval 3600
ServerKeyBits 1024

# Logging
SyslogFacility AUTH
LogLevel INFO

# Authentication:
LoginGraceTime 120
#PermitRootLogin without-password
PermitRootLogin {{ 'yes' if ssh_permit_root_login else 'no' }}
{%Â if ssh_allow_users is defined %}
AllowUsers {{ ssh_allow_users }}
{% endif %}
StrictModes yes

RSAAuthentication yes
PubkeyAuthentication yes
#AuthorizedKeysFile %h/.ssh/authorized_keys
{% if ssh_authorized_keys_file is defined and ssh_authorized_keys_file != False %}
AuthorizedKeysFile {{ ssh_authorized_keys_file }}/%u
{% endif %}

# Don't read the user's ~/.rhosts and ~/.shosts files
IgnoreRhosts yes
# For this to work you will also need host keys in /etc/ssh_known_hosts
RhostsRSAAuthentication no
# similar for protocol version 2
HostbasedAuthentication no
# Uncomment if you don't trust ~/.ssh/known_hosts for RhostsRSAAuthentication
#IgnoreUserKnownHosts yes

# To enable empty passwords, change to yes (NOT RECOMMENDED)
PermitEmptyPasswords no

# Change to yes to enable challenge-response passwords (beware issues with
# some PAM modules and threads)
ChallengeResponseAuthentication no

# Change to no to disable tunnelled clear text passwords
#PasswordAuthentication yes

# Kerberos options
#KerberosAuthentication no
#KerberosGetAFSToken no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes

# GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes

X11Forwarding yes
X11DisplayOffset 10
PrintMotd no
PrintLastLog yes
TCPKeepAlive yes
#UseLogin no

#MaxStartups 10:30:60
#Banner /etc/issue.net

# Allow client to pass locale environment variables
AcceptEnv LANG LC_*

{% if ssh_sftp_user is defined or ssh_sftp_group is defined %}
Subsystem sftp internal-sftp -f AUTH -l VERBOSE
{% else %}
Subsystem sftp /usr/lib/openssh/sftp-server
{% endif %}

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
UsePAM yes

{% if ansible_distribution == 'Ubuntu' and ansible_lsb.major_release == 14 %}
# Use strong ciphers
Ciphers aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes128-ctr
MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160
KexAlgorithms diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1
{% endif %}

# SFTP configuration
{% if ssh_sftp_user is defined %}
Match User {{ ssh_sftp_user }}
  ChrootDirectory %h
  ForceCommand internal-sftp -u 0007
  AllowTcpForwarding no
  PermitTunnel no
  X11Forwarding no
{% endif %}
{% if ssh_sftp_group is defined %}
Match Group {{ ssh_sftp_group }}
  ChrootDirectory %h
  ForceCommand internal-sftp -u 0007
  AllowTcpForwarding no
  PermitTunnel no
  X11Forwarding no
{% endif %}
